/*-
 * Copyright (c) 2016 Michael Zhilin <mizhka@gmail.com>
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer,
 *    without modification.
 * 2. Redistributions in binary form must reproduce at minimum a disclaimer
 *    similar to the "NO WARRANTY" disclaimer below ("Disclaimer") and any
 *    redistribution must be conditioned upon including a substantially
 *    similar Disclaimer requirement for further binary redistribution.
 *
 * NO WARRANTY
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
 * ``AS IS'' AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
 * LIMITED TO, THE IMPLIED WARRANTIES OF NONINFRINGEMENT, MERCHANTIBILITY
 * AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL
 * THE COPYRIGHT HOLDERS OR CONTRIBUTORS BE LIABLE FOR SPECIAL, EXEMPLARY,
 * OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
 * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
 * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER
 * IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
 * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF
 * THE POSSIBILITY OF SUCH DAMAGES.
 */

#ifndef _BGMAC_H_
#define _BGMAC_H_

#define BGMACDUMPREG(sc, _reg)						\
	BHND_DEBUG_DEV(sc->dev, #_reg "=%08x", bus_read_4(sc->mem, _reg))
#define BGMACDUMP(sc)							\
	BGMACDUMPREG(sc,BGMAC_REG_DMA_TX_CTRL);				\
	BGMACDUMPREG(sc,BGMAC_REG_DMA_TX_INDEX);			\
	BGMACDUMPREG(sc,BGMAC_REG_DMA_TX_RINGLOW);			\
	BGMACDUMPREG(sc,BGMAC_REG_DMA_TX_RINGHIGH);			\
	BGMACDUMPREG(sc,BGMAC_REG_DMA_TX_STATE);			\
	BGMACDUMPREG(sc,BGMAC_REG_DMA_TX_ERROR);			\
	BGMACDUMPREG(sc,BGMAC_REG_DMA_RX_CTRL);				\
	BGMACDUMPREG(sc,BGMAC_REG_DMA_RX_INDEX);			\
	BGMACDUMPREG(sc,BGMAC_REG_DMA_RX_RINGLOW);			\
	BGMACDUMPREG(sc,BGMAC_REG_DMA_RX_RINGHIGH);			\
	BGMACDUMPREG(sc,BGMAC_REG_DMA_RX_STATE);			\
	BGMACDUMPREG(sc,BGMAC_REG_DMA_RX_ERROR);			\
	BGMACDUMPREG(sc,BGMAC_REG_CMD_CFG);				\
	BGMACDUMPREG(sc,BGMAC_REG_RX_MAX_LEN);				\
	BGMACDUMPREG(sc,BGMAC_REG_DEVICE_CONTROL);			\
	BGMACDUMPREG(sc,BGMAC_REG_DEVICE_STATUS);			\
	BGMACDUMPREG(sc,BGMAC_REG_BIST_STATUS);				\
	BGMACDUMPREG(sc,BGMAC_REG_INTR_STATUS);				\
	BGMACDUMPREG(sc,BGMAC_REG_INTERRUPT_MASK);			\
	BGMACDUMPREG(sc,BGMAC_REG_GP_TIMER);				\
	BGMACDUMPREG(sc,BGMAC_REG_INTR_RECV_LAZY);			\
	BGMACDUMPREG(sc,BGMAC_MIB_TX_PCKTS);				\
	BGMACDUMPREG(sc,BGMAC_MIB_RX_PCKTS);				\
	BGMACDUMPREG(sc,BGMAC_PWR_CTL);					\
	BGMACDUMPREG(sc,BGMAC_CLOCK_CONTROL_ST);

void	bgmac_if_start(struct ifnet *ifp);

#endif /* _BGMAC_H_ */
